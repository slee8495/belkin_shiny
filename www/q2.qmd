---
author: "Sangho Lee"
date: 7/11/2024
callout-appearance: minimal # this hides the blue "i" icon on .callout-notes
editor_options: 
  chunk_output_type: console
---


## Question 2: What areas/products should we invest to increase revenue. What Products are doing well and what could be improved? Propose 2-3 specific recommendations that could address these opportunities. Demonstrate rationale behind each recommendation

<br>


Based on the statistical model from the previous question, we identified key variables to focus on to improve revenue: asin, ordered_units, and asp. Now, the task is to dive deeper into the data to determine which areas or products we should invest in to increase revenue.

We can simply plot the top-performing products and categories based on revenue and units sold, which will be done here. However, there are several benefits to utilizing model prediction data instead of relying solely on actual sales data. We use prediction models instead of actual sales data because we don't know the complete backstory behind the sales data numbers.

For example, a product may have performed poorly due to external factors such as a competitor's aggressive marketing campaign or a sudden change in consumer preferences. By using prediction models, we can identify products that are underperforming relative to their potential, allowing us to focus on areas that have room for improvement.

In this analysis, we will compare the actual revenue data with the predicted revenue data from the model to identify products with the largest differences between predicted and actual revenue. This will help us pinpoint areas where we can invest to increase revenue.




```{r, message=FALSE, warning=FALSE, include=FALSE}
library(tidyverse)
library(DT)
library(readxl)
library(skimr)
library(caret)
library(knitr)

```



```{r, warning=FALSE, message=FALSE, include=FALSE}
belkin_data <- read_excel("belkin_data.xlsx")
belkin_data %>% 
  janitor::clean_names() %>% 
  dplyr::mutate(week_ending = as.Date(week_ending)) -> belkin_data


```


<br>


```{r, include = FALSE}
model_data <- belkin_data %>%
  mutate(ordered_revenue_amount = as.numeric(ordered_revenue_amount),
         ordered_units = as.numeric(ordered_units),
         asp = as.numeric(asp),
         marketing_spend = as.numeric(marketing_spend),
         views = as.numeric(views),
         category = as.factor(category),
         subcategory = as.factor(subcategory),
         ordered_revenue_amount = as.numeric(ordered_revenue_amount),
         ordered_units = as.numeric(ordered_units),
         asp = as.numeric(asp),
         marketing_spend = as.numeric(marketing_spend),
         views = as.numeric(views))

```

```{r, include=FALSE}
model_data <- model_data %>%
  replace_na(list(ordered_revenue_amount = 0,
                  ordered_units = 0,
                  asp = 0,
                  marketing_spend = 0,
                  views = 0)) %>%
  mutate(across(everything(), ~ replace(.x, is.infinite(.x) | is.nan(.x), 0)))

```

```{r, include=FALSE}

# Create dummy variables for categorical predictors
data_dummies <- dummyVars(" ~ .", data = model_data)
data_prepared <- predict(data_dummies, newdata = model_data) %>% as.data.frame()

```

```{r, include=FALSE}
# Split the data into training and testing sets
set.seed(123)
trainIndex <- createDataPartition(data_prepared$ordered_revenue_amount, p = 0.8, list = FALSE, times = 1)
data_train <- data_prepared[trainIndex,]
data_test <- data_prepared[-trainIndex,]


```

```{r, include=FALSE}
# Build the regression model
model <- lm(ordered_revenue_amount ~ ., data = data_train)

options(scipen = 999)
summary(model)


```


```{r, include=FALSE}
refined_model <- lm(ordered_revenue_amount ~ asin + ordered_units + asp, data = data_train)
summary(refined_model)


```


#### Benefits of Utilizing Model Prediction Data Instead of Relying on Actual Sales Data

- Identify potential issues like stock shortages.
- Optimize marketing strategies.
- Adjust pricing to match market demand.
- Improve product listings to enhance conversions.
- Prepare for seasonal demand.
- Estimate potential success for new product launches.

<br>


```{r}
# Show the refiend model that I created in the previous question
summary(refined_model)

```

<br>

```{r}
# Add predictions to the dataset
data_test$predicted_revenue <- predict(refined_model, newdata = data_test)

# Combine training and testing data for a comprehensive dataset
data_combined <- bind_rows(data_train, data_test)
data_combined$predicted_revenue <- predict(refined_model, newdata = data_combined)

data_combined %>% 
  head(10) %>% 
  dplyr::select(week_ending, asin, ordered_revenue_amount, ordered_units, asp, marketing_spend, views, predicted_revenue) %>% 
  knitr::kable() 
  
  
```

<br> 


Now that we have the predicted_revenue column from the regression model, we can categorize the areas that overperformed and underperformed according to the model's predictions.


<br>


```{r}
# Visualization: Actual vs. Predicted Revenue
ggplot(data_combined, aes(x = ordered_revenue_amount, y = predicted_revenue)) +
  geom_point(alpha = 0.5) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Actual vs. Predicted Revenue",
       x = "Actual Revenue",
       y = "Predicted Revenue") +
  theme_minimal()

```

<br>

#### 1. Predicted Higher but Actual Sales Low

Possible Reasons:

- Stock Shortages: Products may have had insufficient stock to meet predicted demand.
- Marketing Ineffectiveness: Marketing efforts may not have translated into actual sales.
- Product Issues: Issues such as poor reviews, low quality, or unappealing product listings could be deterring sales.

Actions:

- Investigate Stock Levels: Ensure that these products are adequately stocked to meet potential demand.
- Enhance Marketing Strategies: Re-evaluate marketing campaigns to ensure they are effectively targeting the right audience.
- Improve Product Listings: Address any issues with product quality and enhance listings with better descriptions, images, and reviews.

#### 2. Predicted Lower but Actual Sales High

Possible Reasons:

- Exceptional Demand: These products might have experienced an unexpected surge in demand.
- Successful Marketing: Effective marketing campaigns could have driven higher-than-expected sales.
- Seasonal/One-Time Events: The products could have benefited from seasonal trends or one-time events.

Actions:

- Examine Sales Trends: Determine if the high sales are due to temporary factors or if they indicate a sustainable trend.
- Optimize Stock Management: Ensure these products are consistently in stock to capitalize on their high demand.
- Replicate Success: Identify what drove the success and apply similar strategies to other products.


#### 3. Aligned with the Linear Line

Possible Reasons:

- Model Accuracy: The model accurately captures the factors driving sales for these products.
- Stable Demand: These products may have consistent and predictable demand.

Actions:

- Maintain Current Strategies: Continue with the current strategies that are working well.
- Monitor for Changes: Keep an eye on any changes in trends that might affect these products in the future.


<br><br>

The plot shown above helps us identify areas where the model predictions are accurate and where they deviate from actual sales. However, we want to assign a critical score to items that significantly affect our revenue. By adjusting the size of the points, we can easily identify these key items.



```{r, fig.width=10, fig.height=9, fig.align='center', message=FALSE, warning=FALSE}
ggplot(data_combined, aes(x = ordered_revenue_amount, y = predicted_revenue, size = ordered_revenue_amount, color = abs(ordered_revenue_amount - predicted_revenue))) +
  geom_point(alpha = 0.5) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Actual vs. Predicted Revenue with Critical Score by Actual Revenue",
       x = "Actual Revenue",
       y = "Predicted Revenue",
       size = "Actual Revenue",
       color = "Critical Score (|Actual - Predicted|)") +
  scale_color_gradient(low = "blue", high = "red") +
  scale_size_continuous(range = c(1, 10)) +  # Adjust the range to make points larger
  theme_minimal() +
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
        axis.title.x = element_text(size = 12),
        axis.title.y = element_text(size = 12),
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 8)) +

  annotate("rect", xmin = 0, xmax = 20000, ymin = 50000, ymax = 120000, color = "black", fill = NA, size = 1, linetype = "dashed") +
  annotate("rect", xmin = 80000, xmax = 150000, ymin = 0, ymax = 50000, color = "black", fill = NA, size = 1, linetype = "dashed") +

  geom_text(data = data_combined %>% filter(ordered_revenue_amount < 20000 & predicted_revenue > 50000),
            aes(label = asin), size = 3, vjust = -1, color = "black") +
  geom_text(data = data_combined %>% filter(ordered_revenue_amount > 80000 & ordered_revenue_amount < 150000 & predicted_revenue < 50000),
            aes(label = asin), size = 3, vjust = -1, color = "black")
```

<br>



Below are the final recommended products for further examination. Based on the data, these are products with high predicted revenue but low actual revenue and products with low predicted revenue but high actual revenue, significantly impacting overall revenue.

I have categorized these into Focus Area 1 and Focus Area 2.

- Focus Area 1: Products with high predicted revenue but low actual revenue. These products likely have potential, but something may be missing to maximize their profit.
- Focus Area 2: Products with low predicted revenue but high actual revenue. We need to investigate why these products are performing better than predicted. Understanding the reasons behind their success can help replicate it for other products or minimize risks in the future.

<br>


```{r}

# Filter the dataset based on the plot criteria
filtered_data_high_predicted_low_actual <- data_combined %>%
  filter(ordered_revenue_amount < 20000 & predicted_revenue > 50000)

filtered_data_low_predicted_high_actual <- data_combined %>%
  filter(ordered_revenue_amount > 80000 & ordered_revenue_amount < 150000 & predicted_revenue < 50000)

# Combine the filtered data with segmentation
focus_area_1 <- filtered_data_high_predicted_low_actual %>%
  mutate(focus_area = "Focus Area 1 (High Prediction, Low Revenue)",
         check_items = "Investigate Stock Levels, Enhance Marketing Strategies, Improve Product Listings")

focus_area_2 <- filtered_data_low_predicted_high_actual %>%
  mutate(focus_area = "Focus Area 2 (Low Prediction, High Revenue)",
         check_items = "Examine Sales Trends, Optimize Stock Management, Replicate Success")

# Combine the focus areas
segmented_data <- bind_rows(focus_area_1, focus_area_2)

# Display the segmented data
segmented_data %>%
  mutate(week_ending = as.Date(week_ending)) %>%
  group_by(asin) %>%
  summarize(focus_area = first(focus_area), check_items = first(check_items)) %>% 
  knitr::kable()


```


